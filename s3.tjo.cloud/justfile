default:
  @just --list

get-nodes:
  #!/usr/bin/env sh
  pushd {{source_directory()}}/terraform > /dev/null
  tofu output -json | jq -r '.nodes.value[]'
  popd > /dev/null

secrets-encrypt:
  #!/usr/bin/env sh
  age --encrypt -R {{source_directory()}}/secrets.keys \
    secrets.env > secrets.env.encrypted

secrets-decrypt:
  #!/usr/bin/env sh
  age --decrypt \
    -i ${HOME}/.config/sops/age/keys.txt \
    secrets.env.encrypted > secrets.env

apply:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu init -upgrade
  tofu apply

destroy:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu  destroy

get-all-age-pub-keys:
  #!/usr/bin/env sh
  set -eou pipefail

  pushd {{source_directory()}}/terraform > /dev/null
  NODES=$(tofu output -json | jq -r '.nodes.value[].name')
  popd > /dev/null

  for NODE in $NODES
  do
    pushd {{source_directory()}}/terraform > /dev/null
    IP=$(tofu output -json | jq -r ".nodes.value[] | select(.name==\"${NODE}\").ipv4")
    popd > /dev/null
    ssh -o StrictHostKeyChecking=no -p 2222 bine@${IP} 'sudo cat /etc/age/key.txt | grep "public key:"'
  done

configure-all:
  #!/usr/bin/env sh
  set -eou pipefail

  pushd {{source_directory()}}/terraform > /dev/null
  NODES=$(tofu output -json | jq -r '.nodes.value[].name')
  popd > /dev/null

  for NODE in $NODES
  do
    just configure ${NODE} | ts ${NODE}
  done

configure node:
  #!/usr/bin/env sh
  set -eou pipefail

  pushd {{source_directory()}}/terraform > /dev/null
  IP=$(tofu output -json | jq -r '.nodes.value[] | select(.name=="{{node}}").ipv4')
  popd > /dev/null

  echo "== {{node}} at ${IP}"
  echo "=== Running configure.sh"
  cat configure.sh | ssh -o StrictHostKeyChecking=no -p 2222 bine@${IP} 'sudo bash -s'
