{{ $nodeName := getenv "NODE" }}
{{ $node := index (ds "config").nodes $nodeName }}
{{ $ip := (net.ParsePrefix $node.ipv6.address).Addr }}

// This is a basic configuration for the Kea DHCPv6 server. Subnet declarations
// are mostly commented out and no interfaces are listed. Therefore, the servers
// will not listen or respond to any queries.
// The basic configuration must be extended to specify interfaces on which
// the servers should listen. There are a number of example options defined.
// These probably don't make any sense in your network. Make sure you at least
// update the following, before running this example in your network:
// - change the network interface names
// - change the subnets to match your actual network
// - change the option values to match your network
//
// This is just a very basic configuration. Kea comes with large suite (over 30)
// of configuration examples and extensive Kea User's Guide. Please refer to
// those materials to get better understanding of what this software is able to
// do. Comments in this configuration file sometimes refer to sections for more
// details. These are section numbers in Kea User's Guide. The version matching
// your software should come with your Kea package, but it is also available
// in ISC's Knowledgebase (https://kea.readthedocs.io; the direct link for
// the stable version is https://kea.readthedocs.io/).
//
// This configuration file contains only DHCPv6 server's configuration.
// If configurations for other Kea services are also included in this file they
// are ignored by the DHCPv6 server.
{

// DHCPv6 configuration starts here. This section will be read by DHCPv6 server
// and will be ignored by other components.
"Dhcp6": {
    "data-directory": "/etc/kea",

    // Add names of your network interfaces to listen on.
    "interfaces-config": {
        // You typically want to put specific interface names here, e.g. eth0
        // but you can also specify unicast addresses (e.g. eth0/2001:db8::1) if
        // you want your server to handle unicast traffic in addition to
        // multicast. (DHCPv6 is a multicast based protocol).
        "interfaces": [
          "br-lan"
        ],
        "service-sockets-max-retries": 200000,
        "service-sockets-retry-wait-time": 5000
    },

    // Kea supports control channel, which is a way to receive management commands
    // while the server is running. This is a Unix domain socket that receives
    // commands formatted in JSON, e.g. config-set (which sets new configuration),
    // config-reload (which tells Kea to reload its configuration from file),
    // statistic-get (to retrieve statistics) and many more. For detailed
    // description, see Sections 9.12, 16 and 15.
    "control-socket": {
        "socket-type": "unix",
        "socket-name": "/tmp/kea6-ctrl-socket"
    },

    // Use Memfile lease database backend to store leases in a CSV file.
    // Depending on how Kea was compiled, it may also support SQL databases
    // (MySQL and/or PostgreSQL). Those database backends require more
    // parameters, like name, host and possibly user and password.
    // There are dedicated examples for each backend. See Section 8.2.2 "Lease
    // Storage" for details.
    "lease-database": {
        // Memfile is the simplest and easiest backend to use. It's an in-memory
        // C++ database that stores its state in CSV file.
        "type": "memfile",
        "lfc-interval": 3600,
        "persist": true,
        "name": "/etc/kea/dhcp6.leases"
    },

    // Setup reclamation of the expired leases and leases affinity.
    // Expired leases will be reclaimed every 10 seconds. Every 25
    // seconds reclaimed leases, which have expired more than 3600
    // seconds ago, will be removed. The limits for leases reclamation
    // are 100 leases or 250 ms for a single cycle. A warning message
    // will be logged if there are still expired leases in the
    // database after 5 consecutive reclamation cycles.
    "expired-leases-processing": {
        "reclaim-timer-wait-time": 10,
        "flush-reclaimed-timer-wait-time": 25,
        "hold-reclaimed-time": 3600,
        "max-reclaim-leases": 100,
        "max-reclaim-time": 250,
        "unwarned-reclaim-cycles": 5
    },

    // These parameters govern global timers. Addresses will be assigned with
    // preferred and valid lifetimes being 3000 and 4000, respectively. Client
    // is told to start renewing after 1000 seconds. If the server does not
    // respond after 2000 seconds since the lease was granted, a client is
    // supposed to start REBIND procedure (emergency renewal that allows
    // switching to a different server).
    "renew-timer": 1000,
    "rebind-timer": 2000,
    "preferred-lifetime": 3000,
    "valid-lifetime": 4000,

    // These are global options. They are going to be sent when a client requests
    // them, unless overwritten with values in more specific scopes. The scope
    // hierarchy is:
    // - global
    // - subnet
    // - class
    // - host
    //
    // Not all of those options make sense. Please configure only those that
    // are actually useful in your network.
    //
    // For a complete list of options currently supported by Kea, see
    // Section 8.2.9 "Standard DHCPv6 Options". Kea also supports
    // vendor options (see Section 7.2.10) and allows users to define their
    // own custom options (see Section 7.2.9).
    "option-data": [
        {
            "name": "dns-servers",
            "data": "{{ $ip }},fd74:6a6f:0:0001::"
        }
    ],

    // TODO: Once we upgrade kea.
    //"allocator": "random",

    "subnet6": [
        {
            "subnet": "fd74:6a6f:0::/48",
            "pools": [ { "pool": "fd74:6a6f:0:400::-fd74:6a6f:0:ffff:ffff:ffff:ffff:ffff" } ]
        }
    ]
  }
}
