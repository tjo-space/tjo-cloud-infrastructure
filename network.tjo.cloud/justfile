default:
  @just --list

download:
  #!/usr/bin/env sh
  set -euo pipefail
  mkdir -p {{source_directory()}}/iso

  curl -L -o - https://downloads.openwrt.org/releases/23.05.5/targets/x86/64/openwrt-23.05.5-x86-64-generic-ext4-combined-efi.img.gz \
    | gunzip > {{source_directory()}}/iso/openwrt-23.05.5-x86-64-generic-ext4-combined-efi.img

apply:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu init
  tofu apply

destroy:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu destroy

destroy-only node:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu destroy -target='proxmox_virtual_environment_vm.nodes["{{node}}"]'

reboot node:
  #!/usr/bin/env sh
  echo "- Rebooting {{node}}"
  tailscale ssh root@{{node}}-network-tjo-cloud 'reboot'

reboot-all:
  #!/usr/bin/env sh
  set -euo pipefail
  for node in $(cat config.yaml | yq -r '.nodes | keys | .[]')
  do
    just reboot ${node} | ts ${node}
  done

configure-all:
  #!/usr/bin/env sh
  set -euo pipefail
  for node in $(cat config.yaml | yq -r '.nodes | keys | .[]')
  do
    just configure ${node} | ts ${node}
  done

configure node:
  #!/usr/bin/env sh
  set -euo pipefail

  export NODE="{{node}}"
  export TMPDIR="$(mktemp -d)"
  export CONFIG="{{source_directory()}}/config.yaml"

  cd {{source_directory()}}/root

  echo "Configuring ${NODE}.network.tjo.cloud"

  echo "- Generating configuration ${TMPDIR}..."
  for file in $(find * -type f)
  do
    echo " - $file"
    mkdir -p ${TMPDIR}/$(dirname $file)
    gomplate --file $file --datasource config=${CONFIG} > ${TMPDIR}/${file}
  done

  echo "- Copying configuration to node..."
  pushd ${TMPDIR}
  for file in $(find * -type f)
  do
    directory=$(dirname $file)
    echo "- $file"
    cat $file | tailscale ssh root@${NODE}-network-tjo-cloud "mkdir -p /$(dirname $file) && cat > /$file"
  done
  popd

  cat {{source_directory()}}/configure.sh | tailscale ssh root@${NODE}-network-tjo-cloud 'sh' | ts ${NODE}
