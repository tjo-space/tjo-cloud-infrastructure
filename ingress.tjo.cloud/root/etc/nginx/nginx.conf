user www-data;
worker_processes auto;
worker_rlimit_nofile 65536;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

error_log syslog:server=unix:/dev/log;

events {
  worker_connections 65536;
}

http {
  server {
    listen 0.0.0.0:1337;
    listen [::]:1337;

    location /healthz {
      return 200 "OK";
    }
  }
}

stream {
  # Map of Host -> IP
  # We will route the traffic to this endpoints.
  map $ssl_preread_server_name $selected_upstream {
    hostnames;

    # By default route everything to primary gateway in Kubernetes.
    default                      10.8.16.0:443;

    ## CLOUD
    proxmox.tjo.cloud            batuu.system.tjo.space:4443;
    postgresql.tjo.cloud         batuu.system.tjo.space:4443;
    .monitor.tjo.cloud           nevaroo.system.tjo.space:4443;
    vault.tjo.cloud              batuu.system.tjo.space:4443;
    .v2.postgresql.tjo.cloud     any.v2.postgresql.tjo.cloud:443;

    ## NEVAROO
    tjo.space                    nevaroo.system.tjo.space:4443;
    chat.tjo.space               nevaroo.system.tjo.space:4443;
    webhook.chat.tjo.space       nevaroo.system.tjo.space:4443;
    mas.chat.tjo.space           nevaroo.system.tjo.space:4443;
    matrix.chat.tjo.space        nevaroo.system.tjo.space:4443;
    yt.tjo.space                 nevaroo.system.tjo.space:4443;
    search.tjo.space             nevaroo.system.tjo.space:4443;
    send.tjo.space               nevaroo.system.tjo.space:4443;

    ## BATUU
    cloud.tjo.space         batuu.system.tjo.space:4443;
    collabora.tjo.space     batuu.system.tjo.space:4443;
    code.tjo.space          batuu.system.tjo.space:4443;
    vault.tjo.space         batuu.system.tjo.space:4443;
    rss.tjo.space           batuu.system.tjo.space:4443;
    mnts.dev                batuu.system.tjo.space:4443;
    paperless.tjo.space     batuu.system.tjo.space:4443;
    penpot.tjo.space        batuu.system.tjo.space:4443;

    ## JAKKU
    books.tjo.space             jakku.system.tjo.space:4443;
    stuff.tjo.space             jakku.system.tjo.space:4443;
    .media.tjo.space            jakku.system.tjo.space:4443;

    ## TEALFLEAT
    .tealfleet.com              10.4.61.10:443;
  }

  geoip2 /var/geoip.mmdb {
    $geoip2_data_country_iso_code country  iso_code;
    $geoip2_data_latitude         location latitude;
    $geoip2_data_longitude        location longitude;
  }

  log_format geoip_with_upstream 'country=$geoip2_data_country_iso_code '
                   'lat=$geoip2_data_latitude '
                   'long=$geoip2_data_longitude '
                   'ip=$remote_addr '
                   'protocol=$protocol '
                   'server_name=$ssl_preread_server_name '
                   'server_port=$server_port '
                   'upstream=$selected_upstream '
                   'status=$status '
                   'bytes_sent=$bytes_sent '
                   'bytes_received=$bytes_received '
                   'session_time=$session_time';

  log_format geoip 'country=$geoip2_data_country_iso_code '
                   'lat=$geoip2_data_latitude '
                   'long=$geoip2_data_longitude '
                   'ip=$remote_addr '
                   'protocol=$protocol '
                   'server_port=$server_port '
                   'status=$status '
                   'bytes_sent=$bytes_sent '
                   'bytes_received=$bytes_received '
                   'session_time=$session_time';

  # HTTPS
  server {
    access_log        syslog:server=unix:/dev/log geoip_with_upstream;
    listen            0.0.0.0:443;
    listen            [::]:443;
    proxy_pass        $selected_upstream;
    proxy_protocol    on;
    resolver          193.110.81.0 185.253.5.0 9.9.9.9 149.112.112.112;
    set_real_ip_from  0.0.0.0/0;
    ssl_preread       on;
    include           /etc/nginx/partials/blocked-bad-crawlers.conf;
    include           /etc/nginx/partials/blocked-manual.conf;
  }

  # KUBERNETES API
  # This could be served on 443.
  # But we do not want proxy_protocol to be enabled,
  server {
    access_log        syslog:server=unix:/dev/log geoip_with_upstream;
    listen            0.0.0.0:6443;
    listen            [::]:6443;
    proxy_pass        api.internal.k8s.tjo.cloud:6443;
    resolver          193.110.81.0 185.253.5.0 9.9.9.9 149.112.112.112;
    set_real_ip_from  0.0.0.0/0;
    include           /etc/nginx/partials/blocked-bad-crawlers.conf;
    include           /etc/nginx/partials/blocked-manual.conf;
  }

  # GIT
  server {
    access_log        syslog:server=unix:/dev/log geoip;
    listen            0.0.0.0:22;
    listen            [::]:22;
    proxy_pass        batuu.system.tjo.space:2244;
    proxy_protocol    on;
    resolver          193.110.81.0 185.253.5.0 9.9.9.9 149.112.112.112;
    set_real_ip_from  0.0.0.0/0;
    include           /etc/nginx/partials/blocked-bad-crawlers.conf;
    include           /etc/nginx/partials/blocked-manual.conf;
  }

  # EMAIL
  server {
    access_log        syslog:server=unix:/dev/log geoip;
    listen            0.0.0.0:25;
    listen            [::]:25;
    listen            0.0.0.0:143;
    listen            [::]:143;
    listen            0.0.0.0:465;
    listen            [::]:465;
    listen            0.0.0.0:587;
    listen            [::]:587;
    listen            0.0.0.0:993;
    listen            [::]:993;
    listen            0.0.0.0:4190;
    listen            [::]:4190;
    proxy_pass        nevaroo.system.tjo.space:$server_port;
    proxy_protocol    on;
    resolver          193.110.81.0 185.253.5.0 9.9.9.9 149.112.112.112;
    set_real_ip_from  0.0.0.0/0;
  }
}
