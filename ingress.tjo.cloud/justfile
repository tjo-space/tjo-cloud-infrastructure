default:
  @just --list

secrets-encrypt:
  #!/usr/bin/env sh
  age --encrypt -R {{source_directory()}}/secrets.keys \
    secrets.env > secrets.env.encrypted

secrets-decrypt:
  #!/usr/bin/env sh
  age --decrypt \
    -i ${HOME}/.config/sops/age/keys.txt \
    secrets.env.encrypted > secrets.env

apply:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu init
  tofu apply

apply-only node:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu init
  tofu apply --target 'hcloud_server.main["{{node}}"]'

destroy:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu  destroy

destroy-only node:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu init
  tofu destroy --target 'hcloud_server.main["{{node}}"]'

configure-all:
  #!/usr/bin/env sh
  set -eou pipefail

  pushd {{source_directory()}}/terraform > /dev/null
  NODES=$(tofu output -json | jq -r '.nodes.value[].name')
  popd > /dev/null

  for NODE in $NODES
  do
    just configure ${NODE} | ts ${NODE}
  done

configure node:
  #!/usr/bin/env sh
  set -eou pipefail

  pushd {{source_directory()}}/terraform > /dev/null
  IP=$(tofu output -json | jq -r '.nodes.value[] | select(.name=="{{node}}").ipv4')
  popd > /dev/null

  echo "== {{node}} at ${IP}"
  echo "=== Running configure.sh"
  cat configure.sh | ssh -o StrictHostKeyChecking=no -p 2222 root@${IP} 'bash -s'

update-geoip:
  #!/usr/bin/env bash
  # Database and Contents Copyright (c) MaxMind, Inc.
  mkdir -p root/usr/share/GeoIP
  curl -sLn -o root/usr/share/GeoIP/GeoLite2-City.mmdb https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-City.mmdb
  curl -sLn -o root/usr/share/GeoIP/GeoLite2-ASN.mmdb https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-ASN.mmdb

# Create a list of blocked IP ranges. Traffic we don't want.
update-blocked-list:
  #!/usr/bin/env bash
  GOOGLE_BOT_IPV4=$(curl -s https://raw.githubusercontent.com/lord-alfred/ipranges/main/googlebot/ipv4_merged.txt)
  GOOGLE_BOT_IPV6=$(curl -s https://raw.githubusercontent.com/lord-alfred/ipranges/main/googlebot/ipv6_merged.txt)
  echo "# GOOGLE_BOT IPV4 $(echo $GOOGLE_BOT_IPV4 | wc -w)"
  echo "# GOOGLE_BOT IPV6 $(echo $GOOGLE_BOT_IPV6 | wc -w)"

  BING_BOT_IPV4=$(curl -s https://raw.githubusercontent.com/lord-alfred/ipranges/main/bing/ipv4_merged.txt)
  echo "# BING_BOT IPV4 $(echo $BING_BOT_IPV4 | wc -w)"

  OPENAI_IPV4=$(curl -s https://raw.githubusercontent.com/lord-alfred/ipranges/main/openai/ipv4_merged.txt)
  echo "# OPENAI IPV4 $(echo $OPENAI_IPV4 | wc -w)"

  FACEBOOK_IPV4=$(curl -s https://raw.githubusercontent.com/lord-alfred/ipranges/main/facebook/ipv4_merged.txt)
  FACEBOOK_IPV6=$(curl -s https://raw.githubusercontent.com/lord-alfred/ipranges/main/facebook/ipv6_merged.txt)
  echo "# FACEBOOK IPV4 $(echo $FACEBOOK_IPV4 | wc -w)"
  echo "# FACEBOOK IPV6 $(echo $FACEBOOK_IPV6 | wc -w)"

  ALIBABA=$(curl -s https://raw.githubusercontent.com/sakib-m/IP-Prefix-List/refs/heads/main/ALIBABA/only_ip_blocks.txt | grep -v '#')
  echo "# ALIBABA $(echo $ALIBABA | wc -w)"

  IP_RANGES=$(echo -e "$GOOGLE_BOT_IPV4\n$GOOGLE_BOT_IPV6\n$BING_BOT_IPV4\n$BING_BOT_IPV6\n$OPENAI_IPV4\n$FACEBOOK_IPV4\n$FACEBOOK_IPV6\n$ALIBABA" | sort | uniq)
  echo -n "#!!DO NOT EDIT!! Generated by using just ingress update-blocked-list command." > root/etc/haproxy/blocked-bad-crawlers.acl
  echo -n "$IP_RANGES" >> root/etc/haproxy/blocked-bad-crawlers.acl
