default:
  @just --list

dependencies:
  @curl -sLo root/sbin/folder2ram https://raw.githubusercontent.com/bobafetthotmail/folder2ram/4ba7e71149ed871443cfbefab68e65a016f5a60c/debian_package/sbin/folder2ram

apply:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu init -upgrade
  tofu apply

destroy:
  #!/usr/bin/env sh
  cd {{source_directory()}}/terraform
  tofu  destroy

secrets-encrypt:
  #!/usr/bin/env sh
  age --encrypt -R {{source_directory()}}/secrets.keys \
    secrets.env > secrets.env.encrypted

secrets-decrypt:
  #!/usr/bin/env sh
  age --decrypt \
    -i ${HOME}/.config/sops/age/keys.txt \
    secrets.env.encrypted > secrets.env

configure-all: dependencies
  #!/usr/bin/env bash
  set -eou pipefail

  for node in `cat {{source_directory()}}/config.yaml | yq -r '.nodes | keys | .[]'`
  do
    echo "== Configuring $node"
    just configure $node | ts "$node"
  done

configure node: secrets-decrypt
  #!/usr/bin/env sh
  set -euo pipefail

  export NODE="{{node}}"
  export TMPDIR="$(mktemp -d)"
  export CONFIG="{{source_directory()}}/config.yaml"

  echo "Reading Secrets"
  set -a && source {{source_directory()}}/secrets.env && set +a

  cd {{source_directory()}}/root

  echo "Configuring ${NODE}.system.tjo.cloud"

  echo "- Generating configuration ${TMPDIR}..."
  for file in $(find * -type f)
  do
    echo " - $file"
    mkdir -p ${TMPDIR}/$(dirname $file)
    gomplate --file $file --datasource config=${CONFIG} > ${TMPDIR}/${file}
  done

  echo "- Copying configuration to node..."
  pushd ${TMPDIR}
  for file in $(find * -type f)
  do
    directory=$(dirname $file)
    echo "- $file"
    cat $file | tailscale ssh root@${NODE}-system-tjo-cloud "mkdir -p /$(dirname $file) && cat > /$file"
  done
  popd

  cat {{source_directory()}}/configure.sh | tailscale ssh root@${NODE}-system-tjo-cloud 'bash' | ts ${NODE}
